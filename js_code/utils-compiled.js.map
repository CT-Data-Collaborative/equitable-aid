{"version":3,"sources":["utils.js"],"names":[],"mappings":"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","file":"utils-compiled.js","sourcesContent":["\nfunction percentile(arr, p) {\n  if (arr.length === 0) return 0;\n  if (typeof p !== 'number') throw new TypeError('p must be a number');\n  if (p <= 0) return arr[0];\n  if (p >= 1) return arr[arr.length - 1];\n\n  var index = arr.length * p,\n    lower = Math.floor(index),\n    upper = lower + 1,\n    weight = index % 1;\n\n  if (upper >= arr.length) return arr[lower];\n  return arr[lower] * (1 - weight) + arr[upper] * weight;\n}\n\n\nfunction categorize(town, baseline, r2, max_cut) {\n  \"use strict\";\n  if (town.gap > baseline) {\n    return 'max';\n  }\n  if (r2 == 'undefined') {\n    return 'proportional';\n  } else {\n    var per_change = ((r2 * -town.gap) / town.allocation) - 1;\n    if (per_change > max_cut) {\n      return 'min';\n    } else {\n      return 'proportional';\n    }\n  }\n}\n\nfunction town_filter(comparator) {\n  \"use strict\";\n  return function(element) {\n    if (element.category == comparator) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction prop_filter(element) {\n  \"use strict\";\n  if (!(element.category == 'max') && !(element.category == 'min')) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction sum_towns(type) {\n  return function(towns, threshold) {\n    var filtered_towns = towns.filter(town_filter(type));\n    var aid = filtered_towns.map(function(e) { return (1 + threshold) * e.total_aid;});\n    return aid.reduce(function(prev, curr) {\n      return prev + curr;\n    });\n  };\n}\n\nvar get_max_cut = sum_towns('max');\nvar get_min_cut = sum_towns('min');\n\nfunction get_proportional_cut(towns, baseline) {\n  \"use strict\";\n  var prop_towns = towns.filter(prop_filter);\n  var aid = prop_towns.map(function(e) {\n    return (-e.gap - baseline) ( e.population);\n  });\n  return aid.reduce(function(prev, curr) {\n    return prev + curr;\n  });\n}\n\nfunction calc_r(towns, total_allocation, max_cut, min_cut, baseline) {\n  \"use strict\";\n  return (total_allocation - get_max_cut(towns, max_cut) - get_min_cut(towns, min_cut)) / get_proportional_cut(towns, baseline);\n}\n\nfunction get_cuts(data, percent_cut, max_r, min_r, baseline_per) {\n  percent_cut = typeof percent_cut !== 'undefined' ? percent_cut : -0.1;\n  max_r = typeof max_r !=='undefined' ? max_r : 2.5;\n  min_r = typeof min_r !=='undefined' ? min_r : 0.1;\n  baseline_per = typeof baseline_per !== 'undefined' ? baseline_per : 10.0;\n  var max_cut = max_r * percent_cut;\n  var min_cut = min_r * percent_cut;\n  var allocations = data.map(function(x) { return x.total_aid});\n  var total_allocation = allocations.reduce(function (prev, curr) {\n    return prev + curr;}) * (1 + percent_cut);\n  var gap_array = data.map(function(x) { return x.gap;});\n  var baseline = percentile(gap_array, baseline_per/100);\n  data.forEach(function(e) {\n    e.category = categorize(e, baseline);\n  });\n  var init_r2 = calc_r(data, total_allocation, max_cut, min_cut, baseline);\n  var current = init_r2;\n  var r2_equal = false;\n  while (!r2_equal) {\n    data.forEach(function(e) {\n      e.category = categorize(e, baseline, current, max_cut);\n    });\n    var new_r2 = calc_r(data, total_allocation, max_cut, min_cut, baseline);\n    console.log(\"Previous r2: \" + current);\n    console.log(\"Current r2: \" + new_r2);\n    r2_equal = (current == new_r2);\n    console.log(\"Equal: \" + r2_equal);\n    current = new_r2;\n  }\n}\n\n"]}